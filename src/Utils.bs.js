// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE

import * as $$String from "bs-platform/lib/es6/string.js";
import * as Caml_string from "bs-platform/lib/es6/caml_string.js";

function str(prim) {
  return prim;
}

function valueFromEvent(evt) {
  return evt.target.value;
}

function isClosed(s) {
  var s$1 = $$String.trim(s);
  var length = s$1.length;
  if (length === 0) {
    return false;
  } else {
    var _roundo = 0;
    var _roundc = 0;
    var _curlyo = 0;
    var _curlyc = 0;
    var _squareo = 0;
    var _squarec = 0;
    var _quote = 0;
    var _i = 0;
    while(true) {
      var i = _i;
      var quote = _quote;
      var squarec = _squarec;
      var squareo = _squareo;
      var curlyc = _curlyc;
      var curlyo = _curlyo;
      var roundc = _roundc;
      var roundo = _roundo;
      if (i < length) {
        var match = Caml_string.get(s$1, i);
        var exit = 0;
        if (match >= 91) {
          if (match >= 123) {
            if (match >= 126) {
              exit = 1;
            } else {
              switch (match - 123 | 0) {
                case 0 : 
                    _i = i + 1 | 0;
                    _curlyo = curlyo + 1 | 0;
                    continue ;
                case 1 : 
                    exit = 1;
                    break;
                case 2 : 
                    _i = i + 1 | 0;
                    _curlyc = curlyc + 1 | 0;
                    continue ;
                
              }
            }
          } else if (match >= 94) {
            exit = 1;
          } else {
            switch (match - 91 | 0) {
              case 0 : 
                  _i = i + 1 | 0;
                  _squareo = squareo + 1 | 0;
                  continue ;
              case 1 : 
                  exit = 1;
                  break;
              case 2 : 
                  _i = i + 1 | 0;
                  _squarec = squarec + 1 | 0;
                  continue ;
              
            }
          }
        } else {
          var switcher = match - 34 | 0;
          if (switcher > 7 || switcher < 0) {
            exit = 1;
          } else {
            switch (switcher) {
              case 0 : 
                  _i = i + 1 | 0;
                  _quote = quote + 1 | 0;
                  continue ;
              case 1 : 
              case 2 : 
              case 3 : 
              case 4 : 
              case 5 : 
                  exit = 1;
                  break;
              case 6 : 
                  _i = i + 1 | 0;
                  _roundo = roundo + 1 | 0;
                  continue ;
              case 7 : 
                  _i = i + 1 | 0;
                  _roundc = roundc + 1 | 0;
                  continue ;
              
            }
          }
        }
        if (exit === 1) {
          _i = i + 1 | 0;
          continue ;
        }
        
      } else if (roundo === roundc && curlyo === curlyc && squareo === squarec && (quote & 1) === 0) {
        return Caml_string.get(s$1, length - 1 | 0) === /* ";" */59;
      } else {
        return false;
      }
    };
  }
}

export {
  str ,
  valueFromEvent ,
  isClosed ,
  
}
/* No side effect */
